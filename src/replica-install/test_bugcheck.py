"""
Overview:
IPA replica install bzs automation
SetUp Requirements:
-Latest version of RHEL OS
-Need to test for Replica
-The test use dummy data which is not used in actual installation.
"""

import pytest
from ipa_pytests.qe_class import multihost
from ipa_pytests.qe_class import qe_use_class_setup
from ipa_pytests.shared import paths


class Testmaster(object):
    """ Test Class """
    def class_setup(self, multihost):
        """ Setup for class """
        print("\nClass Setup")
        print"REPLICA: ", multihost.replica.hostname
        print("\nChecking IPA server package whether installed on REPLICA")
        output2 = multihost.replica.run_command([paths.RPM, '-q',
                                                 'ipa-server'],
                                                set_env=False,
                                                raiseonerr=False)
        if output2.returncode != 0:
            print("IPA server package not found on REPLICA, thus installing")
            install1 = multihost.replica.run_command([paths.YUM, 'install',
                                                      '-y', 'ipa-server*'])
            if install1.returncode == 0:
                print("IPA server package installed.")
            else:
                pytest.xfail("IPA server package installation failed, "
                             "check repo links for further debugging")
        else:
            print("\n IPA server package found on REPLICA, running tests")

    def test_0001_bz1283890(self, multihost):
        """
        Testcase to validate IPA replica install parameters
        """
        exp_output = "ipa-replica-install: error: option --forwarder:"
        multihost.replica.qerun(['ipa-replica-install', '--forwarder=a.c.b.d'],
                                exp_returncode=2,
                                exp_output=exp_output)

    def test_0002_bz1283890(self, multihost):
        """
        Testcase to validate IPA replica install parameters
        """
        exp_output = "ipa-replica-install: error: you must provide a " \
                     "file generated by ipa-replica-prepare"
        multihost.replica.qerun(['ipa-replica-install'],
                                exp_returncode=2,
                                exp_output=exp_output)

    def class_teardown(self, multihost):
        """ Full suite teardown """
        pass
