@Library('idm-ci')
import idmci.*

env.IDMCI_GITREPO = 'https://gitlab.cee.redhat.com/xdong/idm-ci.git'
env.IDMCI_BRANCH = 'snapshot'
env.IPA_EMAIL = 'ipa-and-samba-team-automation@redhat.com'
env.ANSIBLE_GATHER_TIMEOUT = '60'

node {
        stage("tier-1") {
          parallel(
            "pytest::ipa-host": {
                new TeRun([
                    metadata: 'metadata/pytests/ipa-host.yaml',
                    test: 'ipa-host'
                ]).exec('ipa-slave')
            },
            "pytest::functional-services": {
                new TeRun([
                    metadata: 'metadata/pytests/functional-services.yaml',
                    test: 'functional-services',
                ]).exec('ipa-slave')
            },
            "pytest::subca": {
                new TeRun([
                    metadata: 'metadata/pytests/subca.yaml',
                    test: 'subca',
                ]).exec('ipa-slave')
            },
            "pytest::external-ca": {
                new TeRun([
                    metadata: 'metadata/pytests/external-ca.yaml',
                    test: 'external-ca',
                ]).exec('ipa-slave')
            },
            "pytest::ca-cert-renewal": {
                new TeRun([
                    metadata: 'metadata/pytests/ca-cert-renewal.yaml',
                    test: 'ca-cert-renewal',
                ]).exec('ipa-slave')
            },
            "pytest::otp": {
                new TeRun([
                    metadata: 'metadata/pytests/otp.yaml',
                    test: 'otp',
                ]).exec('ipa-slave')
            },
            "pytest::vault": {
                new TeRun([
                    metadata: 'metadata/pytests/vault.yaml',
                    test: 'vault',
                ]).exec('ipa-slave')
            },
            "pytest::replica-install": {
                new TeRun([
                    metadata: 'metadata/pytests/replica-install.yaml',
                    test: 'replica-install',
                ]).exec('ipa-slave')
            },
            "pytest::ipa-replica-promotion": {
                new TeRun([
                    metadata: 'metadata/pytests/ipa-replica-promotion.yaml',
                    test: 'ipa-replica-promotion',
                ]).exec('ipa-slave')
            },
            "pytest::client-install": {
                new TeRun([
                    metadata: 'metadata/pytests/client-install.yaml',
                    test: 'client-install',
                ]).exec('ipa-slave')
            },
            "pytest::dns-services": {
                new TeRun([
                    metadata: 'metadata/pytests/dns-services.yaml',
                    test: 'dns-services',
                ]).exec('ipa-slave')
            },
            "pytest::ipa-advise": {
                new TeRun([
                    metadata: 'metadata/pytests/ipa-advise.yaml',
                    test: 'ipa-advise',
                ]).exec('ipa-slave')
            },
            "pytest::ipa-cert": {
                new TeRun([
                    metadata: 'metadata/pytests/ipa-cert.yaml',
                    test: 'ipa-cert',
                ]).exec('ipa-slave')
            },
            "pytest::ipa-certprofile": {
                new TeRun([
                    metadata: 'metadata/pytests/ipa-certprofile.yaml',
                    test: 'ipa-certprofile',
                ]).exec('ipa-slave')
            },
            "pytest::ipa-getcert": {
                new TeRun([
                    metadata: 'metadata/pytests/ipa-getcert.yaml',
                    test: 'ipa-getcert',
                ]).exec('ipa-slave')
            },
            "pytest::ipa-hbac": {
                new TeRun([
                    metadata: 'metadata/pytests/ipa-hbac.yaml',
                    test: 'ipa-hbac',
                ]).exec('ipa-slave')
            },
            "pytest::ipa-rbac": {
                new TeRun([
                    metadata: 'metadata/pytests/ipa-rbac.yaml',
                    test: 'ipa-rbac',
                ]).exec('ipa-slave')
            },
            "bash::ipa-automember": {
                new TeRun([
                    metadata: 'metadata/ipatests/ipa-automember.yaml',
                    test: 'ipa-automember'
                ]).exec('ipa-slave')
            },
            "bash::ipa-automount": {
                new TeRun([
                    metadata: 'metadata/ipatests/ipa-automount.yaml',
                    test: 'ipa-automount'
                ]).exec('ipa-slave')
            },
            "bash::ipa-config": {
                new TeRun([
                    metadata: 'metadata/ipatests/ipa-config.yaml',
                    test: 'ipa-config'
                ]).exec('ipa-slave')
            },
            "bash::ipa-ctl": {
                new TeRun([
                    metadata: 'metadata/ipatests/ipa-ctl.yaml',
                    test: 'ipa-ctl'
                ]).exec('ipa-slave')
            },
            "bash::ipa-default": {
                new TeRun([
                    metadata: 'metadata/ipatests/ipa-default.yaml',
                    test: 'ipa-default'
                ]).exec('ipa-slave')
            },
            "bash::ipa-delegation-cli": {
                new TeRun([
                    metadata: 'metadata/ipatests/ipa-delegation-cli.yaml',
                    test: 'ipa-delegation-cli'
                ]).exec('ipa-slave')
            },
            "bash::ipa-get-rm-keytab": {
                new TeRun([
                    metadata: 'metadata/ipatests/ipa-get-rm-keytab.yaml',
                    test: 'ipa-get-rm-keytab'
                ]).exec('ipa-slave')
            },
            "bash::ipa-group": {
                new TeRun([
                    metadata: 'metadata/ipatests/ipa-group-cli.yaml',
                    test: 'ipa-group-cli'
                ]).exec('ipa-slave')
            },
            "bash::ipa-hbac-cli": {
                new TeRun([
                    metadata: 'metadata/ipatests/ipa-hbac-cli.yaml',
                    test: 'ipa-hbac-cli'
                ]).exec('ipa-slave')
            },
            "bash::ipa-hbacsvc-cli": {
                new TeRun([
                    metadata: 'metadata/ipatests/ipa-hbacsvc-cli.yaml',
                    test: 'ipa-hbacsvc-cli'
                ]).exec('ipa-slave')
            },
            "bash::ipa-host-cli": {
                new TeRun([
                    metadata: 'metadata/ipatests/ipa-host-cli.yaml',
                    test: 'ipa-host-cli'
                ]).exec('ipa-slave')
            },
            "bash::ipa-hostgroup-cli": {
                new TeRun([
                    metadata: 'metadata/ipatests/ipa-hostgroup-cli.yaml',
                    test: 'ipa-hostgroup-cli'
                ]).exec('ipa-slave')
            },
            "bash::ipa-i18n": {
                new TeRun([
                    metadata: 'metadata/ipatests/ipa-i18n.yaml',
                    test: 'ipa-i18n'
                ]).exec('ipa-slave')
            },
            "bash::ipa-migration": {
                new TeRun([
                    metadata: 'metadata/ipatests/ipa-migration.yaml',
                    test: 'ipa-migration'
                ]).exec('ipa-slave')
            },
            "bash::ipa-netgroup-cli": {
                new TeRun([
                    metadata: 'metadata/ipatests/ipa-netgroup-cli.yaml',
                    test: 'ipa-netgroup-cli'
                ]).exec('ipa-slave')
            },
            "bash::ipa-password": {
                new TeRun([
                    metadata: 'metadata/ipatests/ipa-password.yaml',
                    test: 'ipa-password'
                ]).exec('ipa-slave')
            },
            "bash::ipa-selfservice": {
                new TeRun([
                    metadata: 'metadata/ipatests/ipa-selfservice.yaml',
                    test: 'ipa-selfservice'
                ]).exec('ipa-slave')
            },
            "bash::ipa-selinuxusermap-cli": {
                new TeRun([
                    metadata: 'metadata/ipatests/ipa-selinuxusermap-cli.yaml',
                    test: 'ipa-selinuxusermap-cli'
                ]).exec('ipa-slave')
            },
            "bash::ipa-services": {
                new TeRun([
                    metadata: 'metadata/ipatests/ipa-services.yaml',
                    test: 'ipa-services'
                ]).exec('ipa-slave')
            },
            "bash::ipa-upgrade": {
                new TeRun([
                    metadata: 'metadata/ipatests/ipa-upgrade.yaml',
                    test: 'ipa-upgrade'
                ]).exec('ipa-slave')
            },
            "bash::ipa-krbtpolicy": {
                new TeRun([
                    metadata: 'metadata/ipatests/ipa-krbtpolicy.yaml',
                    test: 'ipa-krbtpolicy'
                ]).exec('ipa-slave')
            },
            "bash::ipa-dns": {
                new TeRun([
                    metadata: 'metadata/ipatests/ipa-dns.yaml',
                    test: 'ipa-dns'
                ]).exec('ipa-slave')
            },
            "bash::ipa-sudo": {
                new TeRun([
                    metadata: 'metadata/ipatests/ipa-sudo.yaml',
                    test: 'ipa-sudo'
                ]).exec('ipa-slave')
            },
            "bash::ipa-cert": {
                new TeRun([
                    metadata: 'metadata/ipatests/ipa-cert.yaml',
                    test: 'ipa-cert'
                ]).exec('ipa-slave')
            },
            "bash::ipa-getcert": {
                new TeRun([
                    metadata: 'metadata/ipatests/ipa-getcert.yaml',
                    test: 'ipa-getcert'
                ]).exec('ipa-slave')
            },
            "bash::ipa-hbac-func": {
                new TeRun([
                    metadata: 'metadata/ipatests/ipa-hbac-func.yaml',
                    test: 'ipa-hbac-func'
                ]).exec('ipa-slave')
            },
            "bash::ipa-ssh-functional": {
                new TeRun([
                    metadata: 'metadata/ipatests/ipa-ssh-functional.yaml',
                    test: 'ipa-ssh-functional'
                ]).exec('ipa-slave')
            },
            "bash::user-cli-adduser": {
                new TeRun([
                    metadata: 'metadata/ipatests/adduser.yaml',
                    test: 'adduser'
                ]).exec('ipa-slave')
            },
            "bash::ipa-client-cert": {
                new TeRun([
                    metadata: 'metadata/ipatests/ipa-client-cert.yaml',
                    test: 'ipa-client-cert'
                ]).exec('ipa-slave')
            },
            "bash::user-cli-moduser": {
                new TeRun([
                    metadata: 'metadata/ipatests/moduser.yaml',
                    test: 'moduser'
                ]).exec('ipa-slave')
            },
            "bash::ipa-trust-func-ssh": {
                new TeRun([
                    metadata: 'metadata/ipatests/ipa-trust-func-ssh.yaml',
                    test: 'ipa-trust-func-ssh'
                ]).exec('ipa-slave')
            },
            "bash::ipa-trust-func-user": {
                new TeRun([
                    metadata: 'metadata/ipatests/ipa-trust-func-user.yaml',
                    test: 'ipa-trust-func-user'
                ]).exec('ipa-slave')
            }
            )
        }
}

