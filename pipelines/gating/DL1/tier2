@Library('idm-ci')
import idmci.*

env.IDMCI_GITREPO = 'https://gitlab.cee.redhat.com/identity-management/idm-ci.git'
env.IDMCI_BRANCH = 'production'
env.IPA_EMAIL = 'ipa-and-samba-team-automation@redhat.com'
env.ANSIBLE_GATHER_TIMEOUT = '60'
env.VERSION = 'RHEL8.2'
env.TYPE = 'tier2'
env.NIGHTLY = 'true'

// Gating env vars
env.CI_NAME = 'IdM IPA CI'
env.CI_TEAM = 'IdM Eagle Team'
env.CI_DOCS = 'https://gitlab.cee.redhat.com/identity-management/idm-ci/blob/master/doc/user-doc.md'
env.CI_IRC = '#ipa'
env.CI_EMAIL = 'ipa-and-samba-team-automation@redhat.com'
env.ARTIFACT_NAMESPACE = 'idm-ci.redhat-module'

def IPATESTS_METADATA_PATH = 'https://gitlab.cee.redhat.com/identity-management/ipa-tests/raw/RHEL8.2'

properties([
    parameters([    
    string(name: 'CI_MESSAGE', defaultValue: '', description: 'CI_MESSAGE'),
    string(name: 'MESSAGE_HEADERS', defaultValue: '', description: 'MESSAGE_HEADERS'),
    booleanParam(name: 'SKIP_UMB_MSG', defaultValue: false, description: 'True will cause no UMB messages.'),
    booleanParam(name: 'NOTIFY_PACKAGER', defaultValue: false, description: 'Notify packager about this jenkins build.'),
    booleanParam(name: 'DEBUG', defaultValue: true, description: 'Will printout debug information.'),
    string(name: 'RECIPIENTS', defaultValue: '', description: 'Email recipients'),
    ]),
])

node {
  def g = new idmci.gating.gating()
  // We init an in-progress message to be published as soon as this pipeline is triggered
  g.sendMessage('running')
  try {
        stage("tier-2") {
          parallel(
            "pytest::ipa-hosts": {
                new TeRun([
                    metadata: 'metadata/pytests/ipa-host.yaml',
                    test: 'pytests-ipa-host',
                    message: "${params.CI_MESSAGE}"
                ]).exec('ipa-slave')
            },
            )
        }
   } catch (e) {
     throw e
     // We send failing message here
     // NB!!! This is temporarily disabled as these messages are not working well
     // they are interpreted as passing case.
     //g.sendMessage('error')
   } finally {
     // We send a passing message here
     g.sendMessage('complete')
  }
}

