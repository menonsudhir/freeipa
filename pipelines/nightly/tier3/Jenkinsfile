@Library('idm-ci')
import idmci.*

env.IPA_EMAIL = '@redhat.com'
env.ANSIBLE_GATHER_TIMEOUT = '60'
env.NIGHTLY = 'true'
env.IDMCI_SLAVE = 'idm-ci-slave'
env.ABRT_EMAIL= 'ipa-qe@redhat.com'

def IPATESTS_METADATA_PATH = 'https://gitlab.cee.redhat.com/identity-management/ipa-tests/raw/RHEL8.3'

// syntax: cron(<minute> <hour> <day of month> <month> <day of week>) timezone: UTC
// details of jenkins cron sytax: https://jenkins.io/doc/book/pipeline/syntax/#cron-syntax
properties([
    pipelineTriggers([cron('30 23 * * 5')]),
])

node {
    try {
        new ComposeID().exec(env.IDMCI_SLAVE)
    } catch (Exception e) {
        sh script: "echo 'Display COMPOSE_ID unsuccessful'"
        currentBuild.result = 'SUCCESS'
    }
        stage("tier-3") {
          parallel(
            "bash::ds-migration-performance": {
                new TeRun([
                    metadata: "${IPATESTS_METADATA_PATH}/metadata/ds-migration-performance.yaml",
                    test: 'ds-migration-performance',
                    email: 'sumenon@redhat.com'
                ]).exec(env.IDMCI_SLAVE)
            },
            "bash::install-server-cli": {
                new TeRun([
                    metadata: "${IPATESTS_METADATA_PATH}/metadata/install-server-cli.yaml",
                    test: 'install-server-cli',
                    email: 'mpolovka@redhat.com'
                ]).exec(env.IDMCI_SLAVE)
            },
            "pytest::ca_cert_renewal": {
                new TeRun([
                    metadata: 'metadata/pytests/ca_cert_renewal.yaml',
                    test: 'ca_cert_renewal',
                    email: 'myusuf@redhat.com'
                ]).exec(env.IDMCI_SLAVE)
            },
            "pytest::ipv6": {
                new TeRun([
                    metadata: 'metadata/pytests/ipv6.yaml',
                    test: 'ipv6',
                    email: 'amore@redhat.com'
                ]).exec(env.IDMCI_SLAVE)
            },
            "pytest::performance-tests": {
                new TeRun([
                    metadata: 'metadata/pytests/performance-tests.yaml',
                    test: 'performance-tests',
                    email: 'ksiddiqu@redhat.com'
                ]).exec(env.IDMCI_SLAVE)
            },
            "pytest::server-install": {
                new TeRun([
                    metadata: 'metadata/pytests/server-install.yaml',
                    test: 'server-install',
                    email: 'mpolovka@redhat.com'
                ]).exec(env.IDMCI_SLAVE)
            },
            "upstream::dnssec": {
                new TeRun([
                    metadata: 'metadata/upstream/integration/dnssec.yaml',
                    test: 'dnssec',
                    email: 'sorlov@redhat.com'
                ]).exec(env.IDMCI_SLAVE)
            },
            "upstream::installation-TestInstallMaster": {
                new TeRun([
                    metadata: 'metadata/upstream/integration/installation-TestInstallMaster.yaml',
                    test: 'installation-TestInstallMaster',
                    email: 'mpolovka@redhat.com'
                ]).exec(env.IDMCI_SLAVE)
            },
            "upstream::installation-TestInstallMasterDNS": {
                new TeRun([
                    metadata: 'metadata/upstream/integration/installation-TestInstallMasterDNS.yaml',
                    test: 'installation-TestInstallMasterDNS',
                    email: 'mpolovka@redhat.com'
                ]).exec(env.IDMCI_SLAVE)
            },
            "upstream::installation-TestInstallMasterKRA": {
                new TeRun([
                    metadata: 'metadata/upstream/integration/installation-TestInstallMasterKRA.yaml',
                    test: 'installation-TestInstallMasterKRA',
                    email: 'mpolovka@redhat.com'
                ]).exec(env.IDMCI_SLAVE)
            },
            "upstream::installation-TestInstallWithCA1": {
                new TeRun([
                    metadata: 'metadata/upstream/integration/installation-TestInstallWithCA1.yaml',
                    test: 'installation-TestInstallWithCA1',
                    email: 'mpolovka@redhat.com'
                ]).exec(env.IDMCI_SLAVE)
            },
            "upstream::installation-TestInstallWithCA2": {
                new TeRun([
                    metadata: 'metadata/upstream/integration/installation-TestInstallWithCA2.yaml',
                    test: 'installation-TestInstallWithCA2',
                    email: 'mpolovka@redhat.com'
                ]).exec(env.IDMCI_SLAVE)
            },
            "upstream::installation-TestInstallWithCA_DNS1": {
                new TeRun([
                    metadata: 'metadata/upstream/integration/installation-TestInstallWithCA_DNS1.yaml',
                    test: 'installation-TestInstallWithCA_DNS1',
                    email: 'mpolovka@redhat.com'
                ]).exec(env.IDMCI_SLAVE)
            },
            "upstream::installation-TestInstallWithCA_DNS2": {
                new TeRun([
                    metadata: 'metadata/upstream/integration/installation-TestInstallWithCA_DNS2.yaml',
                    test: 'installation-TestInstallWithCA_DNS2',
                    email: 'mpolovka@redhat.com'
                ]).exec(env.IDMCI_SLAVE)
            },
            "upstream::installation-TestInstallWithCA_DNS3": {
                new TeRun([
                    metadata: 'metadata/upstream/integration/installation-TestInstallWithCA_DNS3.yaml',
                    test: 'installation-TestInstallWithCA_DNS3',
                    email: 'mpolovka@redhat.com'
                ]).exec(env.IDMCI_SLAVE)
            },
            "upstream::installation-TestInstallWithCA_DNS4": {
                new TeRun([
                    metadata: 'metadata/upstream/integration/installation-TestInstallWithCA_DNS4.yaml',
                    test: 'installation-TestInstallWithCA_DNS4',
                    email: 'mpolovka@redhat.com'
                ]).exec(env.IDMCI_SLAVE)
            },
            "upstream::installation-TestInstallWithCA_KRA1": {
                new TeRun([
                    metadata: 'metadata/upstream/integration/installation-TestInstallWithCA_KRA1.yaml',
                    test: 'installation-TestInstallWithCA_KRA1',
                    email: 'mpolovka@redhat.com'
                ]).exec(env.IDMCI_SLAVE)
            },
            "upstream::installation-TestInstallWithCA_KRA2": {
                new TeRun([
                    metadata: 'metadata/upstream/integration/installation-TestInstallWithCA_KRA2.yaml',
                    test: 'installation-TestInstallWithCA_KRA2',
                    email: 'mpolovka@redhat.com'
                ]).exec(env.IDMCI_SLAVE)
            },
            "upstream::installation-TestInstallWithCA_KRA_DNS1": {
                new TeRun([
                    metadata: 'metadata/upstream/integration/installation-TestInstallWithCA_KRA_DNS1.yaml',
                    test: 'installation-TestInstallWithCA_KRA_DNS1',
                    email: 'mpolovka@redhat.com'
                ]).exec(env.IDMCI_SLAVE)
            },
            "upstream::installation-TestInstallWithCA_KRA_DNS2": {
                new TeRun([
                    metadata: 'metadata/upstream/integration/installation-TestInstallWithCA_KRA_DNS2.yaml',
                    test: 'installation-TestInstallWithCA_KRA_DNS2',
                    email: 'mpolovka@redhat.com'
                ]).exec(env.IDMCI_SLAVE)
            },
            "upstream::installation-TestInstallReplicaAgainstSpecificServer": {
                new TeRun([
                    metadata: 'metadata/upstream/integration/installation-TestInstallReplicaAgainstSpecificServer.yaml',
                    test: 'installation-TestInstallReplicaAgainstSpecificServer',
                    email: 'mpolovka@redhat.com'
                ]).exec(env.IDMCI_SLAVE)
            },
            "upstream::uninstallation": {
                new TeRun([
                    metadata: 'metadata/upstream/integration/uninstallation.yaml',
                    test: 'uninstallation',
                    email: 'mpolovka@redhat.com'
                ]).exec(env.IDMCI_SLAVE)
            }
            )
        }
}

